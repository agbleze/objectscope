name: ci-cd

on: [push, pull_request]

jobs:
  ci:
    # set up operating system
    runs-on: ubuntu-latest

    # define job steps
    steps: 
    - name: Set up Python 3.10.14
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.14

    - name: Check-out repository
      uses: actions/checkout@v2

    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install system dependencies
      run:  |
        sudo apt-get update && sudo apt-get install -y git && pip install wheel
        python3 -m venv check_venv
        source check_venv/bin/activate

    - name: Install torch
      run:  pip install torch==2.1.1+cu118 torchvision==0.16.1+cu118 --index-url https://download.pytorch.org/whl/cu118

    - name: Instal Detectron2 
      run: pip install --no-build-isolation git+https://github.com/facebookresearch/detectron2.git

    - name: Install package
      run: poetry install

    - name: Test with pytest
      run: pytest tests/ --cov=objectscope --cov-report=xml

    - name: Use Codecov to track coverage
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.xml

    - name: Build documentation
      run: poetry run make html --directory docs/

  cd:
    permissions: #read-all | write-all
     id-token: write
     contents: write
    # only run this job when ci passes
    needs: ci

    # only run this job if new work is pushed to the main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    # set up operating system
    runs-on: ubuntu-latest

    # define job steps
    steps:
      - name: Set up Python 3.10.14
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.14"

      - name: Check-out repositiory
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      #- name: Use Python Semantic Release to prepare Release
      - name: Install poetry and python-semantic-release
        uses: snok/install-poetry@v1
        
      - name: Install semantic release 
        #id: release
        #uses: python-semantic-release/python-semantic-release@v8.3.0
        #with:
        #  github_token: ${{ secrets.GITHUB_TOKEN }}
        run: pip3 install python-semantic-release==9.9.0

      - name: Version bumping
        id: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release version

      #- name: Build distribution package
      #  run: poetry build

      #- name: Release pub
      #  run: semantic-release publish

      #- name: Build distribution package
      #  run: poetry build

      - name: Publish to TestPYPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release.outputs.released == 'true'
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Test install from TestPYPI
        run: |
          pip install --index-url https://test.pypi.org/simple/ \
          --extra-index-url https://pypi.org/simple objectscope

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: steps.release.outputs.released == 'true'
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish package distribution to GitHub Releases
        uses: python-semantic-release/upload-to-gh-release@main
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}